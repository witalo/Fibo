type Query {
  activeAnnouncements: [AnnouncementType]

  allAnnouncements: [AnnouncementType]

  cashesByAccountType(accountType: String): [CashType]

  allWayPays: [ChoiceWithNumericCodeType]

  allSalesPayments(startDate: Date, endDate: Date, subsidiaryId: Int): SalesWithPaymentSummaryType

  balancePayment(subsidiaryId: Int!): BalancePaymentType

  pendingPayments(subsidiaryId: Int!, status: String, startDate: Date, endDate: Date): [CashFlowType]

  operations(date: Date): [OperationType]

  searchGeographicLocationCode(search: String): [LocationType]

  searchClientByParameter(search: String, documentType: String, operationDocumentType: String, isClient: Boolean, isDriver: Boolean, isSupplier: Boolean, isReceiver: Boolean): [PersonType]

  districtsByProvinceId(provinceId: String): [DistrictType]

  provincesByDepartmentId(departmentId: String): [ProvinceType]

  departments: [DepartmentType]

  allCountries: [ChoiceWithStringCodeType]

  allDocumentTypes: [ChoiceWithStringCodeType]

  allCreditNoteTypes: [ChoiceWithStringCodeType]

  allEconomicActivities: [ChoiceWithStringCodeType]

  allOperationTypes: [ChoiceWithStringCodeType]

  allGuideReasons: [ChoiceWithStringCodeType]

  allGuideModes: [ChoiceWithStringCodeType]

  allDetractionTypes: [ChoiceWithNumericCodeType]

  allDetractionPaymentMethods: [ChoiceWithNumericCodeType]

  allPerceptionTypes: [ChoiceWithNumericCodeType]

  allRetentionTypes: [ChoiceWithNumericCodeType]

  allClients: [PersonType]

  allCustomers(subsidiaryId: Int): [PersonType]

  allPersonsBySubsidiaryAndType(subsidiaryId: Int, type: String): [PersonType]

  allSuppliers: [PersonType]

  cpeShippingQuery(operationId: Int, status: String): CpeType

  allSales(subsidiaryId: Int, clientId: Int, startDate: Date, endDate: Date, documentType: String, page: Int, pageSize: Int, serial: String, correlative: Int, userId: Int): SalesSummaryType

  getSaleByParameters(doc: String, documentType: String, serial: String, correlative: String, totalToPay: String): OperationType

  getSaleById(pk: ID): OperationType

  allGuides(subsidiaryId: Int, startDate: Date, endDate: Date, documentType: String, page: Int, pageSize: Int): GuidesSummaryType

  allQuotes(subsidiaryId: Int, clientId: Int, startDate: Date, endDate: Date, documentType: String, page: Int, pageSize: Int, serial: String, correlative: Int): QuotesSummaryType

  allRetentions(subsidiaryId: Int, startDate: Date, endDate: Date, documentType: String, page: Int, pageSize: Int): RetentionsSummaryType

  allEntryNotes(subsidiaryId: Int, startDate: Date, endDate: Date, page: Int, pageSize: Int): NotesSummaryType

  allExitNotes(subsidiaryId: Int, startDate: Date, endDate: Date, clientId: Int, page: Int, pageSize: Int, serial: String, correlative: Int): NotesSummaryType

  monthlySalesAndPurchases(subsidiaryId: Int): MonthlySalesAndPurchasesType

  allSerials(subsidiaryId: Int): [SerialAssignedType]

  allSerialsByType(subsidiaryId: Int, documentType: String): [SerialAssignedType]

  operationsApp(date: Date, userId: Int): [OperationType]

  operationsByPersonAndUser(personId: Int, userId: Int, types: [String]): [OperationType]

  searchPersons(search: String): [PersonType]

  operationsByDateAndUserId(date: Date, userId: Int, types: [String]): [OperationType]

  clientById(clientId: ID): PersonType

  operationById(id: Int): OperationType

  operationsByDateRange(startDate: String!, endDate: String!, userId: Int!, types: [String]!): [OperationType]

  allWarehouses(subsidiaryId: Int, category: String): [WarehouseType]

  allUnits: [UnitType]

  allProducts(subsidiaryId: Int, available: Boolean): [ProductType]

  allProductTariffs(productId: Int): [ProductTariffType]

  allTypeAffectations: [TypeAffectationType]

  warehouseById(pk: ID): WarehouseType

  unitById(pk: ID): UnitType

  productById(pk: ID): ProductType

  productTariffById(pk: ID): ProductTariffType

  productDetailByProductId(productId: Int): ProductDetailType

  productStockMovement(subsidiaryId: Int, startDate: Date, endDate: Date): [ProductStockMovementType]

  allPurchases(subsidiaryId: Int, supplierId: Int, startDate: Date, endDate: Date, documentType: String, page: Int, pageSize: Int, serial: String, correlative: Int): PurchasesSummaryType

  searchProduct(search: String, subsidiaryId: Int, first: Int): [ProductType]

  tariffByProductId(productId: Int): TariffType

  productsBySubsidiary(subsidiaryId: Int!): [ProductType]

  productMovilById(productId: Int!): ProductType

  units: [UnitType]

  typeAffectations: [TypeAffectationType]

  warehouses: [WarehouseType]

  myProfile: UserType

  userById(pk: ID): UserType

  users: [UserType]

  searchUsers(search: String): [UserType]

  usersBySubsidiaryId(subsidiaryId: Int): [UserType]

  companies: [CompanyType]

  companyById(pk: ID): CompanyType

  searchCompanies(search: String): [CompanyType]

  subsidiaries: [SubsidiaryType]

  subsidiaryById(pk: ID): SubsidiaryType

  subsidiariesByCompanyId(companyId: ID): [SubsidiaryType]

  searchSubsidiaries(search: String): [SubsidiaryType]

  companiesByUser: [CompanyType]

  devicesBySubsidiaryId(pk: ID): [UserType]
}

type AnnouncementType {
  id: Int

  message: String!

  messageType: AnnouncementsAnnouncementMessageTypeChoices!

  startDate: DateTime!

  endDate: DateTime!

  isActive: Boolean!

  company: CompanyType
}

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

"""
An enumeration.
"""
enum AnnouncementsAnnouncementMessageTypeChoices {
  """
  Informaci√≥n
  """
  INFO

  """
  Advertencia
  """
  WARNING

  """
  Urgente
  """
  URGENT
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""
The `Boolean` scalar type represents `true` or `false`.
"""
scalar Boolean

type CompanyType {
  id: Int

  typeDoc: String

  doc: String!

  businessName: String

  shortName: String

  address: String

  email: String

  phone: String

  logo: String

  country: String!

  userSol: String

  keySol: String

  limit: Int!

  emissionInvoiceWithPreviousDate: Int

  emissionReceiptWithPreviousDate: Int

  includeIgv: Boolean!

  percentageIgv: Int

  isEnabled: Boolean!

  isProduction: Boolean!

  guideClientId: String

  guideClientSecret: String

  withStock: Boolean!

  invoiceF: Boolean!

  invoiceB: Boolean!

  guide: Boolean!

  app: Boolean!

  catalog: Boolean!

  ose: Boolean!

  productionDate: Date

  certification: String

  certificationExpirationDate: Date

  certificationKey: String

  deductionAccount: String

  disabledDate: Date

  createdAt: DateTime!

  updatedAt: DateTime!

  accountNumber: String

  comment: String

  disableContinuePay: Boolean!

  registerDate: String

  isRus: Boolean!

  isAgentRetention: Boolean!

  isAgentPerception: Boolean!

  showUser: Boolean!

  subsidiarySet: [SubsidiaryType!]!

  stoppointSet: [StopPointType!]!

  vehicleSet: [VehicleType!]!

  announcementSet: [AnnouncementType!]!
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

type SubsidiaryType {
  id: ID!

  serial: String

  name: String

  address: String

  phone: String

  company: CompanyType

  district: DistrictType

  createdAt: DateTime!

  updatedAt: DateTime!

  token: String

  pdfFormatForInvoices: Int

  pdfFormatForReceiptInvoices: Int

  pdfFormatForGuides: Int

  pdfFormatForQuotation: UsersSubsidiaryPdfFormatForQuotationChoices!

  pdfFormatForExitNotes: UsersSubsidiaryPdfFormatForExitNotesChoices!

  fillColor: String

  userSet: [UserType!]!

  warehouseSet: [WarehouseType!]!

  productSet: [ProductType!]!

  documentemittedSet: [DocumentEmittedType!]!

  serialassignedSet: [SerialAssignedType!]!

  operationSet: [OperationType!]!

  cashSet: [CashType!]!

  companyId: Int

  companyName: String

  districtId: String

  districtName: String

  geographicLocationByDistrict: String
}

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

type DistrictType {
  id: String!

  description: String

  subsidiarySet: [SubsidiaryType!]!

  stoppointSet: [StopPointType!]!

  personSet: [PersonType!]!
}

type StopPointType {
  id: ID!

  serial: String

  address: String

  district: DistrictType

  company: CompanyType

  origins: [OperationType!]!

  arrivals: [OperationType!]!
}

type OperationType {
  id: ID!

  documentType: OperationsOperationDocumentTypeChoices!

  operationType: OperationsOperationOperationTypeChoices!

  operationStatus: OperationsOperationOperationStatusChoices!

  operationAction: OperationsOperationOperationActionChoices!

  creditNoteType: OperationsOperationCreditNoteTypeChoices!

  debitNoteType: OperationsOperationDebitNoteTypeChoices!

  perceptionType: OperationsOperationPerceptionTypeChoices!

  retentionType: OperationsOperationRetentionTypeChoices!

  detractionType: OperationsOperationDetractionTypeChoices!

  detractionPaymentMethod: OperationsOperationDetractionPaymentMethodChoices!

  serial: String

  correlative: Int

  currencyType: OperationsOperationCurrencyTypeChoices!

  saleExchangeRate: Decimal!

  purchaseExchangeRate: Decimal!

  operationDate: Date

  emitDate: Date

  emitTime: Time

  dueDate: Date

  lowDate: Date

  createAt: DateTime!

  updateAt: DateTime!

  user: UserType

  client: PersonType

  supplier: PersonType

  subsidiary: SubsidiaryType

  warehouse: WarehouseType

  guideOrigin: StopPointType

  guideArrival: StopPointType

  discountForItem: Decimal!

  discountGlobal: Decimal!

  discountPercentageGlobal: Decimal!

  igvType: OperationsOperationIgvTypeChoices!

  igvPercentage: Decimal!

  perceptionPercentage: Decimal!

  retentionPercentage: Decimal!

  detractionPercentage: Decimal!

  totalDiscount: Decimal!

  totalAnticipation: Decimal!

  totalTaxed: Decimal!

  totalUnaffected: Decimal!

  totalExonerated: Decimal!

  totalIgv: Decimal!

  totalFree: Decimal!

  totalAmount: Decimal!

  totalPerception: Decimal!

  totalRetention: Decimal!

  totalDetraction: Decimal!

  totalToPay: Decimal!

  totalPayed: Decimal!

  totalTurned: Decimal!

  observation: String

  sendWhatsapp: Boolean!

  sendSunat: Boolean!

  sendClient: Boolean!

  sunatDescription: String

  sunatDescriptionLow: String

  sunatStatus: Boolean!

  parentOperation: OperationType

  relatedSeries: String

  relatedNumber: Int

  relatedDocType: String

  relatedReasonCode: String

  linkXml: String

  linkCdr: String

  lowCorrelative: Int

  summaryCorrelative: Int

  lowTicket: String

  linkXmlLow: String

  linkCdrLow: String

  codeHash: String

  transferDate: Date

  guideReasonTransfer: OperationsOperationGuideReasonTransferChoices!

  guideModeTransfer: OperationsOperationGuideModeTransferChoices!

  othersDrivers: [PersonType!]!

  othersVehicles: [VehicleType!]!

  relatedDocuments: [DocumentEmittedType!]!

  guideTicket: String

  guideToken: String

  totalWeight: Decimal!

  quantityPackages: Decimal!

  weightMeasurementUnit: UnitType

  transportationCompany: PersonType

  mainVehicle: VehicleType

  mainDriver: PersonType

  receiver: PersonType

  hasPerception: Boolean!

  hasRetention: Boolean!

  hasDetraction: Boolean!

  operationSet: [OperationType!]!

  operationdetailSet: [OperationDetailType!]!

  cashflowSet: [CashFlowType!]!

  paymentlogSet: [PaymentLogType!]!

  documentPerson: String

  namesPerson: String

  operationStatusReadable: String

  documentTypeReadable: String

  creditNoteReferences: String

  subsidiaryId: Int

  userId: Int

  totalCash: Float

  totalDebitCard: Float

  totalCreditCard: Float

  totalTransfer: Float

  totalMonue: Float

  totalCheck: Float

  totalCoupon: Float

  totalYape: Float

  totalDue: Float

  totalOther: Float

  guideReasonTransferReadable: String

  guideModeTransferReadable: String
}

"""
An enumeration.
"""
enum OperationsOperationDocumentTypeChoices {
  """
  FACTURA
  """
  A_01

  """
  BOLETA
  """
  A_03

  """
  NOTA DE CREDITO
  """
  A_07

  """
  NOTA DE DEBITO
  """
  A_08

  """
  GUIA DE REMISION REMITENTE
  """
  A_09

  """
  GU√çA DE REMISI√ìN TRANSPORTISTA
  """
  A_31

  """
  COMPROBANTE DE RETENCI√ìN
  """
  A_20

  """
  COMPROBANTE DE PERCEPCI√ìN
  """
  A_40

  """
  COMPROBANTE DE OPERACIONES
  """
  A_48

  """
  NOTA DE AJUSTE DE OPERACIONES
  """
  A_89

  """
  NOTA DE ENTRADA
  """
  NE

  """
  NOTA DE SALIDA
  """
  NS

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationOperationTypeChoices {
  """
  Venta interna
  """
  A_0101

  """
  Venta Interna - Sustenta Gastos Deducibles Persona Natural
  """
  A_0112

  """
  Venta Interna-NRUS
  """
  A_0113

  """
  Exportaci√≥n de Bienes
  """
  A_0200

  """
  Exportaci√≥n de Servicios ‚Äì Prestaci√≥n servicios realizados √≠ntegramente en el pa√≠s
  """
  A_0201

  """
  Exportaci√≥n de Servicios ‚Äì Prestaci√≥n de servicios de hospedaje No Domiciliado
  """
  A_0202

  """
  Exportaci√≥n de Servicios ‚Äì Transporte de navieras
  """
  A_0203

  """
  Exportaci√≥n de Servicios ‚Äì Servicios a naves y aeronaves de bandera extranjera
  """
  A_0204

  """
  Exportaci√≥n de Servicios - Servicios que conformen un Paquete Tur√≠stico
  """
  A_0205

  """
  Exportaci√≥n de Servicios ‚Äì Servicios complementarios al transporte de carga
  """
  A_0206

  """
  Exportaci√≥n de Servicios ‚Äì Suministro de energ√≠a el√©ctrica a favor de sujetos domiciliados en ZED
  """
  A_0207

  """
  Exportaci√≥n de Servicios ‚Äì Prestaci√≥n servicios realizados parcialmente en el extranjero
  """
  A_0208

  """
  Operaciones con Carta de porte a√©reo (emitidas en el √°mbito nacional)
  """
  A_0301

  """
  Operaciones de Transporte ferroviario de pasajeros
  """
  A_0302

  """
  Ventas no domiciliados que no califican como exportaci√≥n
  """
  A_0401

  """
  Compra interna
  """
  A_0501

  """
  Anticipos
  """
  A_0502

  """
  Compra de oro
  """
  A_0503

  """
  Operaci√≥n Sujeta a Detracci√≥n
  """
  A_1001

  """
  Operaci√≥n Sujeta a Detracci√≥n- Recursos Hidrobiol√≥gicos
  """
  A_1002

  """
  Operaci√≥n Sujeta a Detracci√≥n- Servicios de Transporte Pasajeros
  """
  A_1003

  """
  Operaci√≥n Sujeta a Detracci√≥n- Servicios de Transporte Carga
  """
  A_1004

  """
  Operaci√≥n Sujeta a Percepci√≥n
  """
  A_2001

  """
  Cr√©ditos a empresas
  """
  A_2100

  """
  Cr√©ditos de consumo revolvente
  """
  A_2101

  """
  Cr√©ditos de consumo no revolvente
  """
  A_2102

  """
  Otras operaciones no gravadas - Empresas del sistema financiero y cooperativas de ahorro y cr√©dito no autorizadas a captar recursos del p√∫blico
  """
  A_2103

  """
  Otras operaciones no gravadas - Empresas del sistema de seguros
  """
  A_2104

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationOperationStatusChoices {
  """
  REGISTRADO
  """
  A_01

  """
  AUTORIZADO
  """
  A_02

  """
  PENDIENTE
  """
  A_03

  """
  PENDIENTE DE BAJA
  """
  A_04

  """
  EN PROCESO DE BAJA
  """
  A_05

  """
  DADO DE BAJA
  """
  A_06

  """
  RECHAZADO
  """
  A_07

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationOperationActionChoices {
  """
  ENTRADA
  """
  E

  """
  SALIDA
  """
  S

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationCreditNoteTypeChoices {
  """
  Anulaci√≥n de la operaci√≥n
  """
  A_01

  """
  Anulaci√≥n por error en el RUC
  """
  A_02

  """
  Correcci√≥n por error en la descripci√≥n o atenci√≥n de reclamo respecto de bienes adquiridos o servicios prestados
  """
  A_03

  """
  Descuento global
  """
  A_04

  """
  Descuento por √≠tem
  """
  A_05

  """
  Devoluci√≥n total
  """
  A_06

  """
  Devoluci√≥n por √≠tem
  """
  A_07

  """
  Bonificaci√≥n
  """
  A_08

  """
  Disminuci√≥n en el valor
  """
  A_09

  """
  Otros Conceptos
  """
  A_10

  """
  Ajustes de operaciones de exportaci√≥n
  """
  A_11

  """
  Ajustes afectos al IVAP
  """
  A_12

  """
  Correcci√≥n o modificaci√≥n del monto neto pendiente de pago y/o la(s) fechas(s) de vencimiento del pago √∫nico o de las cuotas y/o los montos correspondientes a cada cuota, de ser el caso
  """
  A_13

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationDebitNoteTypeChoices {
  """
  Intereses por mora
  """
  A_01

  """
  Aumento en el valor
  """
  A_02

  """
  Penalidades/ otros conceptos
  """
  A_03

  """
  Ajustes de operaciones de exportaci√≥n
  """
  A_10

  """
  Ajustes afectos al IVAP
  """
  A_11

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationPerceptionTypeChoices {
  """
  2.0% PERCEPCI√ìN VENTA INTERNA - TASA 2%
  """
  A_1

  """
  1.0% PERCEPCI√ìN A LA ADQUISICI√ìN DE COMBUSTIBLE - TASA 1%
  """
  A_2

  """
  0.5% PERCEPCI√ìN REALIZADA AL AGENTE DE PERCEPCI√ìN CON TASA ESPECIAL - TASA 0.5%
  """
  A_3

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum OperationsOperationRetentionTypeChoices {
  """
  TASA 3%
  """
  A_1

  """
  TASA 6%
  """
  A_2

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum OperationsOperationDetractionTypeChoices {
  """
  [001] AZ√öCAR
  """
  A_1

  """
  [002] ARROZ PILADO
  """
  A_2

  """
  [003] ALCOHOL ET√çLICO
  """
  A_3

  """
  [004] RECURSOS HIDROBIOL√ìGICOS
  """
  A_4

  """
  [005] MA√çZ AMARILLO DURO
  """
  A_5

  """
  [007] CA√ëA DE AZ√öCAR
  """
  A_7

  """
  [008] MADERA
  """
  A_8

  """
  [009] ARENA Y PIEDRA
  """
  A_9

  """
  [010] RESIDUOS, SUBPRODUCTOS, DESECHOS, RECORTES, DESPERDICIOS Y FORMAS PRIMARIAS DERIVADAS DE LOS MISMOS
  """
  A_10

  """
  [011] BIENES GRAVADOS CON EL IGV, POR RENUNCIA A LA EXONERACI√ìN
  """
  A_11

  """
  [012] INTERMEDIACI√ìN LABORAL Y TERCERIZACI√ìN
  """
  A_12

  """
  [014] CARNES Y DESPOJOS COMESTIBLES
  """
  A_13

  """
  [016] ACEITE DE PESCADO
  """
  A_14

  """
  [017] HARINA, POLVO Y PELLETS DE PESCADO, CRUST√ÅCEOS, MOLUSCOS Y DEM√ÅS INVERTEBRADOS ACU√ÅTICOS
  """
  A_15

  """
  [019] ARRENDAMIENTO DE BIENES
  """
  A_17

  """
  [020] MANTENIMIENTO Y REPARACI√ìN DE BIENES MUEBLES
  """
  A_18

  """
  [021] MOVIMIENTO DE CARGA
  """
  A_19

  """
  [022] OTROS SERVICIOS EMPRESARIALES
  """
  A_20

  """
  [023] LECHE
  """
  A_21

  """
  [024] COMISI√ìN MERCANTIL
  """
  A_22

  """
  [025] FABRICACI√ìN DE BIENES POR ENCARGO
  """
  A_23

  """
  [026] SERVICIO DE TRANSPORTE PERSONAS
  """
  A_24

  """
  [027] TRANSPORTE DE CARGA
  """
  A_25

  """
  [028] TRANSPORTE P√öBLICO DE PASAJEROS REALIZADO POR V√çA TERRESTRE
  """
  A_26

  """
  [030] CONTRATOS DE CONSTRUCCI√ìN
  """
  A_28

  """
  [031] ORO GRAVADO CON EL IGV
  """
  A_29

  """
  [032] PAPRIKA Y OTROS FRUTOS DE LOS G√âNEROS CAPSICUM O PIMIENTA
  """
  A_30

  """
  [034] MINERALES MET√ÅLICOS NO AUR√çFEROS
  """
  A_32

  """
  [035] BIENES EXONERADOS DEL IGV
  """
  A_33

  """
  [036] ORO Y DEM√ÅS MINERALES MET√ÅLICOS EXONERADOS DEL IGV
  """
  A_34

  """
  [037] DEM√ÅS SERVICIOS GRAVADOS CON EL IGV
  """
  A_35

  """
  [039] MINERALES NO MET√ÅLICOS
  """
  A_37

  """
  [040] BIEN INMUEBLE GRAVADO CON EL IGV
  """
  A_38

  """
  [041] PLOMO
  """
  A_39

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum OperationsOperationDetractionPaymentMethodChoices {
  """
  [001] Dep√≥sito en cuenta
  """
  A_1

  """
  [002] Giro
  """
  A_2

  """
  [003] Transferencia de fondos
  """
  A_3

  """
  [004] Orden de pago
  """
  A_4

  """
  [005] Tarjeta de d√©bito
  """
  A_5

  """
  [006] Tarjeta de cr√©dito emitida en el pa√≠s por una empresa del sistema financiero 
  """
  A_6

  """
  [007] Cheques con la cl√°usula de NO NEGOCIABLE, INTRANSFERIBLES, NO A LA ORDEN u otra equivalente, a que se refiere el inciso g) del art√≠culo 5 de la ley
  """
  A_7

  """
  [008] Efectivo, por operaciones en las que no existe obligaci√≥n de utilizar medio de pago
  """
  A_8

  """
  [009] Efectivo, en los dem√°s casos
  """
  A_9

  """
  [010] Medios de pago usados en comercio exterior 
  """
  A_10

  """
  [011] Documentos emitidos por las EDPYMES y las cooperativas de ahorro y cr√©dito no autorizadas a captar dep√≥sitos del p√∫blico
  """
  A_11

  """
  [012] Tarjeta de cr√©dito emitida en el pa√≠s o en el exterior por una empresa no perteneciente al sistema financiero, cuyo objeto principal sea la emisi√≥n y administraci√≥n de tarjetas de cr√©dito
  """
  A_12

  """
  [013] Tarjetas de cr√©dito emitidas en el exterior por empresas bancarias o financieras no domiciliadas
  """
  A_13

  """
  [101] Transferencias ‚Äì Comercio exterior
  """
  A_14

  """
  [102] Cheques bancarios - Comercio exterior
  """
  A_15

  """
  [103] Orden de pago simple - Comercio exterior
  """
  A_16

  """
  [104] Orden de pago documentario - Comercio exterior
  """
  A_17

  """
  [105] Remesa simple - Comercio exterior
  """
  A_18

  """
  [106] Remesa documentaria - Comercio exterior
  """
  A_19

  """
  [107] Carta de cr√©dito simple - Comercio exterior
  """
  A_20

  """
  [108] Carta de cr√©dito documentario - Comercio exterior
  """
  A_21

  """
  [999] Otros medios de pago
  """
  A_22

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum OperationsOperationCurrencyTypeChoices {
  """
  SOLES
  """
  PEN

  """
  D√ìLARES
  """
  USD

  """
  EUROS
  """
  EUR

  """
  LIBRA ESTERLINA
  """
  GBP
}

"""
The `Decimal` scalar type represents a python Decimal.
"""
scalar Decimal

"""
The `Time` scalar type represents a Time value as
specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Time

type UserType {
  id: ID!

  password: String

  lastLogin: DateTime

  """
  Indica que este usuario tiene todos los permisos sin asign√°rselos expl√≠citamente.
  """
  isSuperuser: Boolean!

  firstName: String!

  lastName: String!

  """
  Indica si el usuario puede entrar en este sitio de administraci√≥n.
  """
  isStaff: Boolean!

  """
  Indica si el usuario debe ser tratado como activo. Desmarque esta opci√≥n en lugar de borrar la cuenta.
  """
  isActive: Boolean!

  dateJoined: DateTime!

  email: String!

  username: String!

  document: String

  phone: String

  avatar: String

  role: UsersUserRoleChoices!

  subsidiary: SubsidiaryType

  mobileDescription: String

  operationSet: [OperationType!]!

  employeeAccount: [CashType!]!

  cashflowSet: [CashFlowType!]!

  roleName: String

  repeatPassword: String

  avatarUrl: String

  fullName: String

  subsidiaryId: Int

  companyId: Int
}

"""
An enumeration.
"""
enum UsersUserRoleChoices {
  """
  EMPRESARIAL
  """
  A_01

  """
  PERSONAL
  """
  A_02

  """
  APP MOVIL
  """
  A_03
}

type CashType {
  id: Int

  subsidiary: SubsidiaryType

  employee: UserType

  supplier: PersonType

  client: PersonType

  name: String

  accountNumber: String

  accountType: AccountingCashAccountTypeChoices!

  currencyType: AccountingCashCurrencyTypeChoices!

  createdAt: DateTime

  isEnabled: Boolean!

  cashflowSet: [CashFlowType!]!

  currencyTypeReadable: String
}

type PersonType {
  id: ID!

  code: String

  economicActivityMain: OperationsPersonEconomicActivityMainChoices!

  typeTrade: TypeTradeType

  documentType: String

  documentNumber: String

  driverLicense: String

  names: String

  phone: String

  email: String

  isEnabled: Boolean!

  isClient: Boolean!

  isSupplier: Boolean!

  isDriver: Boolean!

  isReceiver: Boolean!

  country: OperationsPersonCountryChoices!

  shortName: String

  address: String

  district: DistrictType

  observation: String

  mtcRegistrationNumber: String

  clients: [OperationType!]!

  suppliers: [OperationType!]!

  operationSet: [OperationType!]!

  transportations: [OperationType!]!

  drivers: [OperationType!]!

  receivers: [OperationType!]!

  supplierAccount: [CashType!]!

  clientAccount: [CashType!]!

  documentTypeReadable: String
}

"""
An enumeration.
"""
enum OperationsPersonEconomicActivityMainChoices {
  """
  NO APLICA
  """
  A_0

  """
  MANTENIMIENTO Y REPARACI√ìN DE VEH√çCULOS AUTOMOTORES
  """
  A_4520

  """
  VENTA AL POR MAYOR A CAMBIO DE UNA RETRIBUCI√ìN O POR CONTRATA
  """
  A_4610

  """
  VENTA AL POR MAYOR DE ALIMENTOS, BEBIDAS Y TABACO
  """
  A_4630

  """
  VENTA AL POR MAYOR NO ESPECIALIZADA
  """
  A_4690

  """
  TRANSPORTE DE CARGA POR CARRETERA
  """
  A_4923
}

type TypeTradeType {
  id: ID!

  name: String

  creditSuspension: Int!

  cashAndCreditBlock: Int!

  producttariffSet: [ProductTariffType!]!

  personSet: [PersonType!]!
}

type ProductTariffType {
  id: ID!

  product: ProductType

  unit: UnitType

  typeTrade: TypeTradeType

  typePrice: LogisticsProductTariffTypePriceChoices!

  priceWithIgv: Decimal!

  priceWithoutIgv: Decimal!

  quantityMinimum: Decimal!

  operationdetailSet: [OperationDetailType!]!

  productId: Int

  productCode: String

  productName: String

  unitId: Int

  unitName: String

  unitDescription: String

  quantity: Float
}

type ProductType {
  id: Int

  code: String

  barcode: String

  codeSnt: String

  name: String

  stockMin: Int

  stockMax: Int

  path: String

  available: Boolean!

  activeType: LogisticsProductActiveTypeChoices!

  ean: String

  weightInKilograms: Float

  maximumFactor: Int

  minimumFactor: Int

  minimumUnit: UnitType

  maximumUnit: UnitType

  typeAffectation: TypeAffectationType

  subjectPerception: Boolean!

  observation: String

  subsidiary: SubsidiaryType

  producttariffSet: [ProductTariffType!]!

  productstoreSet: [ProductStoreType!]!

  totalProductTariff: Int

  typeAffectationId: Int

  typeAffectationName: String

  minimumUnitId: Int

  minimumUnitName: String

  maximumUnitId: Int

  maximumUnitName: String

  activeTypeReadable: String

  priceWithIgv1: Float

  priceWithoutIgv1: Float

  priceWithIgv2: Float

  priceWithoutIgv2: Float

  priceWithIgv3: Float

  priceWithoutIgv3: Float

  priceWithIgv4: Float

  priceWithoutIgv4: Float

  stock: Float

  productTariffs: [ProductTariffType]

  productStores: [ProductStoreType]
}

"""
An enumeration.
"""
enum LogisticsProductActiveTypeChoices {
  """
  PRODUCTO
  """
  A_01

  """
  REGALO
  """
  A_02

  """
  SERVICIO
  """
  A_03

  """
  NO APLICA
  """
  NA
}

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

type UnitType {
  id: ID!

  shortName: String

  description: String

  code: String

  minimumUnits: [ProductType!]!

  maximumUnits: [ProductType!]!

  producttariffSet: [ProductTariffType!]!

  operationSet: [OperationType!]!
}

type TypeAffectationType {
  id: Int

  code: String

  name: String

  affectCode: String

  affectName: String

  affectType: String

  productSet: [ProductType!]!

  operationdetailSet: [OperationDetailType!]!
}

type OperationDetailType {
  id: Int

  operation: OperationType

  productTariff: ProductTariffType

  typeAffectation: TypeAffectationType

  quantity: Decimal!

  unitValue: Decimal!

  unitPrice: Decimal!

  discountPercentage: Decimal!

  igvPercentage: Decimal!

  perceptionPercentage: Decimal!

  totalDiscount: Decimal!

  totalValue: Decimal!

  totalIgv: Decimal!

  totalAmount: Decimal!

  totalPerception: Decimal!

  totalToPay: Decimal!

  remainingQuantity: Float

  remainingPrice: Decimal!

  remainingPriceTotal: Decimal!

  description: String

  isAnticipation: Boolean!

  relatedDocumentSerial: String

  relatedDocumentCorrelative: Int

  productId: Int

  productName: String

  productTariffId: Int

  typeAffectationId: Int

  quantityReturned: Float

  quantityAvailable: Float
}

type ProductStoreType {
  id: ID!

  warehouse: WarehouseType

  stock: Decimal!
}

type WarehouseType {
  id: ID!

  name: String

  subsidiary: SubsidiaryType

  category: LogisticsWarehouseCategoryChoices!

  productstoreSet: [ProductStoreType!]!

  operationSet: [OperationType!]!

  subsidiaryId: Int

  subsidiaryName: String

  categoryReadable: String
}

"""
An enumeration.
"""
enum LogisticsWarehouseCategoryChoices {
  """
  VENTA
  """
  A_01

  """
  VEHICULO
  """
  A_02

  """
  RESERVA
  """
  A_03

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum LogisticsProductTariffTypePriceChoices {
  """
  NO APLICA
  """
  A_0

  """
  COSTO DE COMPRA UNITARIO
  """
  A_1

  """
  COSTO DE COMPRA AL POR MAYOR
  """
  A_2

  """
  PRECIO UNITARIO DE VENTA
  """
  A_3

  """
  PRECIO AL POR MAYOR DE VENTA
  """
  A_4
}

"""
An enumeration.
"""
enum OperationsPersonCountryChoices {
  """
  AFGANIST√ÅN
  """
  AF

  """
  ALBANIA
  """
  AL

  """
  ALEMANIA
  """
  DE

  """
  ANDORRA
  """
  AD

  """
  ANGOLA
  """
  AO

  """
  ANGUILLA
  """
  AI

  """
  ANT√ÅRTIDA
  """
  AQ

  """
  ANTIGUA Y BARBUDA
  """
  AG

  """
  ANTILLAS HOLANDESAS
  """
  AN

  """
  ARABIA SAUD√ç
  """
  SA

  """
  ARGELIA
  """
  DZ

  """
  ARGENTINA
  """
  AR

  """
  ARMENIA
  """
  AM

  """
  ARUBA
  """
  AW

  """
  ARY MACEDONIA
  """
  MK

  """
  AUSTRALIA
  """
  AU

  """
  AUSTRIA
  """
  AT

  """
  AZERBAIY√ÅN
  """
  AZ

  """
  BAHAMAS
  """
  BS

  """
  BAHR√âIN
  """
  BH

  """
  BANGLADESH
  """
  BD

  """
  BARBADOS
  """
  BB

  """
  B√âLGICA
  """
  BE

  """
  BELICE
  """
  BZ

  """
  BENIN
  """
  BJ

  """
  BERMUDAS
  """
  BM

  """
  BHUT√ÅN
  """
  BT

  """
  BIELORRUSIA
  """
  BY

  """
  BOLIVIA
  """
  BO

  """
  BOSNIA Y HERZEGOVINA
  """
  BA

  """
  BOTSUANA
  """
  BW

  """
  BRASIL
  """
  BR

  """
  BRUN√âI
  """
  BN

  """
  BULGARIA
  """
  BG

  """
  BURKINA FASO
  """
  BF

  """
  BURUNDI
  """
  BI

  """
  CABO VERDE
  """
  CV

  """
  CAMBOYA
  """
  KH

  """
  CAMER√öN
  """
  CM

  """
  CANAD√Å
  """
  CA

  """
  CHAD
  """
  TD

  """
  CHILE
  """
  CL

  """
  CHINA
  """
  CN

  """
  CHIPRE
  """
  CY

  """
  CIUDAD DEL VATICANO
  """
  VA

  """
  COLOMBIA
  """
  CO

  """
  COMORAS
  """
  KM

  """
  CONGO
  """
  CG

  """
  COREA DEL NORTE
  """
  KP

  """
  COREA DEL SUR
  """
  KR

  """
  COSTA DE MARFIL
  """
  CI

  """
  COSTA RICA
  """
  CR

  """
  CROACIA
  """
  HR

  """
  CUBA
  """
  CU

  """
  DINAMARCA
  """
  DK

  """
  DOMINICA
  """
  DM

  """
  ECUADOR
  """
  EC

  """
  EGIPTO
  """
  EG

  """
  EL SALVADOR
  """
  SV

  """
  EMIRATOS √ÅRABES UNIDOS
  """
  AE

  """
  ERITREA
  """
  ER

  """
  ESLOVAQUIA
  """
  SK

  """
  ESLOVENIA
  """
  SI

  """
  ESPA√ëA
  """
  ES

  """
  ESTADOS UNIDOS
  """
  US

  """
  ESTONIA
  """
  EE

  """
  ETIOP√çA
  """
  ET

  """
  FILIPINAS
  """
  PH

  """
  FINLANDIA
  """
  FI

  """
  FIYI
  """
  FJ

  """
  FRANCIA
  """
  FR

  """
  GAB√ìN
  """
  GA

  """
  GAMBIA
  """
  GM

  """
  GEORGIA
  """
  GE

  """
  GHANA
  """
  GH

  """
  GIBRALTAR
  """
  GI

  """
  GRANADA
  """
  GD

  """
  GRECIA
  """
  GR

  """
  GROENLANDIA
  """
  GL

  """
  GUADALUPE
  """
  GP

  """
  GUAM
  """
  GU

  """
  GUATEMALA
  """
  GT

  """
  GUAYANA FRANCESA
  """
  GF

  """
  GUERNESEY
  """
  GG

  """
  GUINEA
  """
  GN

  """
  GUINEA ECUATORIAL
  """
  GQ

  """
  GUINEA-BISSAU
  """
  GW

  """
  GUYANA
  """
  GY

  """
  HAIT√ç
  """
  HT

  """
  HOLANDA O PA√çSES BAJOS
  """
  NL

  """
  HONDURAS
  """
  HN

  """
  HONG KONG
  """
  HK

  """
  HUNGR√çA
  """
  HU

  """
  INDIA
  """
  IN

  """
  INDONESIA
  """
  ID

  """
  IR√ÅN
  """
  IR

  """
  IRAQ
  """
  IQ

  """
  IRLANDA
  """
  IE

  """
  ISLA BOUVET
  """
  BV

  """
  ISLA DE MAN
  """
  IM

  """
  ISLA DE NAVIDAD
  """
  CX

  """
  ISLA NORFOLK
  """
  NF

  """
  ISLANDIA
  """
  IS

  """
  ISLAS ALAND
  """
  AX

  """
  ISLAS CAIM√ÅN
  """
  KY

  """
  ISLAS COCOS
  """
  CC

  """
  ISLAS COOK
  """
  CK

  """
  ISLAS FEROE
  """
  FO

  """
  ISLAS GEORGIAS DEL SUR Y SANDWICH DEL SUR
  """
  GS

  """
  ISLAS HEARD Y MCDONALD
  """
  HM

  """
  ISLAS MALVINAS
  """
  FK

  """
  ISLAS MARIANAS DEL NORTE
  """
  MP

  """
  ISLAS MARSHALL
  """
  MH

  """
  ISLAS PITCAIRN
  """
  PN

  """
  ISLAS SALOM√ìN
  """
  SB

  """
  ISLAS TURCAS Y CAICOS
  """
  TC

  """
  ISLAS ULTRAMARINAS DE ESTADOS UNIDOS
  """
  UM

  """
  ISLAS V√çRGENES BRIT√ÅNICAS
  """
  VG

  """
  ISLAS V√çRGENES DE LOS ESTADOS UNIDOS
  """
  VI

  """
  ISRAEL
  """
  IL

  """
  ITALIA
  """
  IT

  """
  JAMAICA
  """
  JM

  """
  JAP√ìN
  """
  JP

  """
  JERSEY
  """
  JE

  """
  JORDANIA
  """
  JO

  """
  KAZAJST√ÅN
  """
  KZ

  """
  KENIA
  """
  KE

  """
  KIRGUIST√ÅN
  """
  KG

  """
  KIRIBATI
  """
  KI

  """
  KUWAIT
  """
  KW

  """
  LAOS
  """
  LA

  """
  LESOTHO
  """
  LS

  """
  LETONIA
  """
  LV

  """
  L√çBANO
  """
  LB

  """
  LIBERIA
  """
  LR

  """
  LIBIA
  """
  LY

  """
  LIECHTENSTEIN
  """
  LI

  """
  LITUANIA
  """
  LT

  """
  LUXEMBURGO
  """
  LU

  """
  MACAO
  """
  MO

  """
  MADAGASCAR
  """
  MG

  """
  MALASIA
  """
  MY

  """
  MALAWI
  """
  MW

  """
  MALDIVAS
  """
  MV

  """
  MAL√ç
  """
  ML

  """
  MALTA
  """
  MT

  """
  MARRUECOS
  """
  MA

  """
  MARTINICA
  """
  MQ

  """
  MAURICIO
  """
  MU

  """
  MAURITANIA
  """
  MR

  """
  MAYOTTE
  """
  YT

  """
  M√âXICO
  """
  MX

  """
  MICRONESIA
  """
  FM

  """
  MOLDAVIA
  """
  MD

  """
  M√ìNACO
  """
  MC

  """
  MONGOLIA
  """
  MN

  """
  MONTSERRAT
  """
  MS

  """
  MOZAMBIQUE
  """
  MZ

  """
  MYANMAR
  """
  MM

  """
  NAMIBIA
  """
  NA

  """
  NAURU
  """
  NR

  """
  NEPAL
  """
  NP

  """
  NICARAGUA
  """
  NI

  """
  N√çGER
  """
  NE

  """
  NIGERIA
  """
  NG

  """
  NIUE
  """
  NU

  """
  NORUEGA
  """
  NO

  """
  NUEVA CALEDONIA
  """
  NC

  """
  NUEVA ZELANDA
  """
  NZ

  """
  OM√ÅN
  """
  OM

  """
  PAKIST√ÅN
  """
  PK

  """
  PALAU
  """
  PW

  """
  PALESTINA
  """
  PS

  """
  PANAM√Å
  """
  PA

  """
  PAP√öA NUEVA GUINEA
  """
  PG

  """
  PARAGUAY
  """
  PY

  """
  PER√ö
  """
  PE

  """
  POLINESIA FRANCESA
  """
  PF

  """
  POLONIA
  """
  PL

  """
  PORTUGAL
  """
  PT

  """
  PUERTO RICO
  """
  PR

  """
  QATAR
  """
  QA

  """
  REINO UNIDO
  """
  GB

  """
  REP√öBLICA CENTROAFRICANA
  """
  CF

  """
  REP√öBLICA CHECA
  """
  CZ

  """
  REP√öBLICA DEMOCR√ÅTICA DEL CONGO
  """
  CD

  """
  REP√öBLICA DOMINICANA
  """
  DO

  """
  REUNI√ìN
  """
  RE

  """
  RUANDA
  """
  RW

  """
  RUMANIA
  """
  RO

  """
  RUSIA
  """
  RU

  """
  SAHARA OCCIDENTAL
  """
  EH

  """
  SAMOA
  """
  WS

  """
  SAMOA AMERICANA
  """
  AS

  """
  SAN CRIST√ìBAL Y NEVIS
  """
  KN

  """
  SAN MARINO
  """
  SM

  """
  SAN PEDRO Y MIQUEL√ìN
  """
  PM

  """
  SAN VICENTE Y LAS GRANADINAS
  """
  VC

  """
  SANTA HELENA
  """
  SH

  """
  SANTA LUC√çA
  """
  LC

  """
  SANTO TOM√â Y PR√çNCIPE
  """
  ST

  """
  SENEGAL
  """
  SN

  """
  SERBIA Y MONTENEGRO
  """
  CS

  """
  SEYCHELLES
  """
  SC

  """
  SIERRA LEONA
  """
  SL

  """
  SINGAPUR
  """
  SG

  """
  SIRIA
  """
  SY

  """
  SOMALIA
  """
  SO

  """
  SRI LANKA
  """
  LK

  """
  SUAZILANDIA
  """
  SZ

  """
  SUD√ÅFRICA
  """
  ZA

  """
  SUD√ÅN
  """
  SD

  """
  SUECIA
  """
  SE

  """
  SUIZA
  """
  CH

  """
  SURINAM
  """
  SR

  """
  SVALBARD Y JAN MAYEN
  """
  SJ

  """
  TAILANDIA
  """
  TH

  """
  TAIW√ÅN
  """
  TW

  """
  TANZANIA
  """
  TZ

  """
  TAYIKIST√ÅN
  """
  TJ

  """
  TERRITORIO BRIT√ÅNICO DEL OC√âANO √çNDICO
  """
  IO

  """
  TERRITORIOS AUSTRALES FRANCESES
  """
  TF

  """
  TIMOR ORIENTAL
  """
  TL

  """
  TOGO
  """
  TG

  """
  TOKELAU
  """
  TK

  """
  TONGA
  """
  TO

  """
  TRINIDAD Y TOBAGO
  """
  TT

  """
  T√öNEZ
  """
  TN

  """
  TURKMENIST√ÅN
  """
  TM

  """
  TURQU√çA
  """
  TR

  """
  TUVALU
  """
  TV

  """
  UCRANIA
  """
  UA

  """
  UGANDA
  """
  UG

  """
  URUGUAY
  """
  UY

  """
  UZBEKIST√ÅN
  """
  UZ

  """
  VANUATU
  """
  VU

  """
  VENEZUELA
  """
  VE

  """
  VIETNAM
  """
  VN

  """
  WALLIS Y FUTUNA
  """
  WF

  """
  YEMEN
  """
  YE

  """
  YIBUTI
  """
  DJ

  """
  ZAMBIA
  """
  ZM

  """
  ZIMBAWE
  """
  ZW
}

"""
An enumeration.
"""
enum AccountingCashAccountTypeChoices {
  """
  CAJA
  """
  C

  """
  BANCO
  """
  B

  """
  CUENTA POR COBRAR
  """
  CC

  """
  CUENTA POR PAGAR
  """
  CP
}

"""
An enumeration.
"""
enum AccountingCashCurrencyTypeChoices {
  """
  SOLES
  """
  PEN

  """
  D√ìLARES
  """
  USD

  """
  EUROS
  """
  EUR

  """
  LIBRA ESTERLINA
  """
  GBP
}

type CashFlowType {
  id: Int

  cash: CashType

  """
  Usuario
  """
  user: UserType

  """
  Operaci√≥n
  """
  operation: OperationType

  total: Decimal!

  currency: String!

  """
  Descripci√≥n del pago
  """
  description: String

  """
  Estado del pago
  """
  status: String

  transactionDate: Date

  transactionType: AccountingCashFlowTransactionTypeChoices!

  wayPay: AccountingCashFlowWayPayChoices!

  attachment: String

  attachmentType: AccountingCashFlowAttachmentTypeChoices!

  attachmentDescription: String

  cardBrand: String

  cardLastFour: String

  installmentNumber: Int

  """
  Fecha de creaci√≥n
  """
  createdAt: String

  isValidated: Boolean!

  rawResponse: JSONString

  paymentlogSet: [PaymentLogType!]!

  """
  Monto del pago
  """
  amount: Float

  """
  M√©todo de pago
  """
  paymentMethod: Int

  """
  Nombre del m√©todo de pago
  """
  paymentMethodName: String

  """
  Nombre del estado
  """
  statusName: String

  """
  Fecha de √∫ltima actualizaci√≥n
  """
  updatedAt: String

  """
  Referencia del pago
  """
  reference: String

  """
  Sucursal
  """
  subsidiary: SubsidiaryType

  attachmentTypeName: String
}

"""
An enumeration.
"""
enum AccountingCashFlowTransactionTypeChoices {
  """
  ENTRADA
  """
  E

  """
  SALIDA
  """
  S

  """
  DEPOSITO
  """
  D

  """
  RETIRO
  """
  R

  """
  DEBE
  """
  DC

  """
  HABER
  """
  HC
}

"""
An enumeration.
"""
enum AccountingCashFlowWayPayChoices {
  """
  EFECTIVO [CONTADO]
  """
  A_1

  """
  TARJETA D√âBITO [CONTADO]
  """
  A_2

  """
  TARJETA CR√âDITO [CONTADO]
  """
  A_3

  """
  TRANSFERENCIA [CONTADO]
  """
  A_4

  """
  GIRO [CONTADO]
  """
  A_5

  """
  CHEQUE [CONTADO]
  """
  A_6

  """
  CUP√ìN [CONTADO]
  """
  A_7

  """
  YAPE [CONTADO]
  """
  A_8

  """
  POR PAGAR [CR√âDITO]
  """
  A_9

  """
  OTROS [CONTADO]
  """
  A_10
}

"""
An enumeration.
"""
enum AccountingCashFlowAttachmentTypeChoices {
  """
  FACTURA
  """
  F

  """
  BOLETA
  """
  B

  """
  VOUCHER DE PAGO
  """
  V

  """
  CONTRATO FIRMADO
  """
  C

  """
  OTRO
  """
  O
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString

type PaymentLogType {
  id: Int

  operation: OperationType

  cashFlow: CashFlowType

  eventType: AccountingPaymentLogEventTypeChoices!

  """
  Estado interno del evento (SUCCESS, FAILED, PENDING)
  """
  status: String!

  """
  Datos enviados en la solicitud
  """
  requestData: JSONString

  """
  Respuesta recibida del servidor
  """
  responseData: JSONString

  ipAddress: String

  userAgent: String

  createdAt: DateTime!

  """
  Fecha de procesamiento real del evento
  """
  processedAt: DateTime
}

"""
An enumeration.
"""
enum AccountingPaymentLogEventTypeChoices {
  """
  Pago iniciado por el usuario
  """
  USER_INITIATED_PAYMENT

  """
  Solicitud de pago creada
  """
  CREATE_PAYMENT_REQUEST

  """
  FormToken generado exitosamente
  """
  CREATE_PAYMENT_SUCCESS

  """
  Fall√≥ la creaci√≥n del pago
  """
  CREATE_PAYMENT_FAILED

  """
  Formulario de pago mostrado
  """
  PAYMENT_FORM_DISPLAYED

  """
  Pago enviado por el cliente
  """
  PAYMENT_SUBMITTED

  """
  Pago autorizado
  """
  PAYMENT_AUTHORIZED

  """
  Fondos capturados
  """
  PAYMENT_CAPTURED

  """
  Pago completado
  """
  PAYMENT_SUCCESS

  """
  Pago fallido
  """
  PAYMENT_FAILED

  """
  Pago pendiente de revisi√≥n
  """
  PAYMENT_PENDING

  """
  Reembolso solicitado
  """
  REFUND_REQUESTED

  """
  Reembolso procesado
  """
  REFUND_PROCESSED

  """
  Reembolso fallido
  """
  REFUND_FAILED

  """
  Webhook recibido
  """
  WEBHOOK_RECEIVED

  """
  Webhook procesado
  """
  WEBHOOK_PROCESSED

  """
  Error al procesar webhook
  """
  WEBHOOK_ERROR

  """
  Revisi√≥n por fraude
  """
  FRAUD_REVIEW

  """
  Contracargo solicitado
  """
  CHARGEBACK_REQUESTED

  """
  Contracargo resuelto
  """
  CHARGEBACK_RESOLVED

  """
  Conciliaci√≥n programada
  """
  SCHEDULED_RECONCILIATION

  """
  Token expirado
  """
  TOKEN_EXPIRED

  """
  Cliente subi√≥ constancia
  """
  PAYMENT_PROOF_UPLOADED

  """
  Constancia rechazada (ej: imagen inv√°lida)
  """
  PAYMENT_PROOF_REJECTED

  """
  Pago validado manualmente
  """
  PAYMENT_APPROVED

  """
  Constancia no fue validada a tiempo
  """
  PAYMENT_EXPIRED
}

"""
An enumeration.
"""
enum OperationsOperationIgvTypeChoices {
  """
  18%
  """
  A_18

  """
  10% (Ley 31556)
  """
  A_10

  """
  4% (IVAP)
  """
  A_4

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum OperationsOperationGuideReasonTransferChoices {
  """
  VENTA
  """
  A_01

  """
  COMPRA
  """
  A_02

  """
  VENTA CON ENTREGA A TERCEROS
  """
  A_03

  """
  TRASLADO ENTRE ESTABLECIMIENTOS DE LA MISMA EMPRESA
  """
  A_04

  """
  CONSIGNACION
  """
  A_05

  """
  DEVOLUCION
  """
  A_06

  """
  RECOJO DE BIENES TRANSFORMADOS
  """
  A_07

  """
  IMPORTACION
  """
  A_08

  """
  EXPORTACION
  """
  A_09

  """
  OTROS
  """
  A_13

  """
  VENTA SUJETA A CONFIRMACION DEL COMPRADOR
  """
  A_14

  """
  TRASLADO DE BIENES PARA TRANSFORMACION
  """
  A_17

  """
  TRASLADO EMISOR ITINERANTE CP
  """
  A_18

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsOperationGuideModeTransferChoices {
  """
  TRANSPORTE P√öBLICO
  """
  A_01

  """
  TRANSPORTE PRIVADO
  """
  A_02

  """
  NO APLICA
  """
  NA
}

type VehicleType {
  id: ID!

  typeVehicle: OperationsVehicleTypeVehicleChoices!

  licensePlate: String

  company: CompanyType

  capacity: Decimal!

  operationSet: [OperationType!]!

  vehicles: [OperationType!]!
}

"""
An enumeration.
"""
enum OperationsVehicleTypeVehicleChoices {
  """
  TRACTO
  """
  A_01

  """
  FURGON
  """
  A_02
}

type DocumentEmittedType {
  id: ID!

  subsidiary: SubsidiaryType

  documentType: OperationsDocumentEmittedDocumentTypeChoices!

  serial: String

  correlative: Int!

  emitDate: Date

  currencyType: OperationsDocumentEmittedCurrencyTypeChoices!

  saleExchangeRate: Decimal!

  currencyDateChange: Date

  totalAmount: Decimal!

  retentionType: OperationsDocumentEmittedRetentionTypeChoices!

  totalRetention: Decimal!

  retentionDate: Date

  operationSet: [OperationType!]!
}

"""
An enumeration.
"""
enum OperationsDocumentEmittedDocumentTypeChoices {
  """
  FACTURA
  """
  A_01

  """
  BOLETA
  """
  A_03

  """
  NOTA DE CREDITO
  """
  A_07

  """
  NOTA DE DEBITO
  """
  A_08

  """
  GUIA DE REMISION REMITENTE
  """
  A_09

  """
  GU√çA DE REMISI√ìN TRANSPORTISTA
  """
  A_31

  """
  COMPROBANTE DE RETENCI√ìN
  """
  A_20

  """
  COMPROBANTE DE PERCEPCI√ìN
  """
  A_40

  """
  COMPROBANTE DE OPERACIONES
  """
  A_48

  """
  NOTA DE AJUSTE DE OPERACIONES
  """
  A_89

  """
  NOTA DE ENTRADA
  """
  NE

  """
  NOTA DE SALIDA
  """
  NS

  """
  NO APLICA
  """
  NA
}

"""
An enumeration.
"""
enum OperationsDocumentEmittedCurrencyTypeChoices {
  """
  SOLES
  """
  PEN

  """
  D√ìLARES
  """
  USD

  """
  EUROS
  """
  EUR

  """
  LIBRA ESTERLINA
  """
  GBP
}

"""
An enumeration.
"""
enum OperationsDocumentEmittedRetentionTypeChoices {
  """
  TASA 3%
  """
  A_1

  """
  TASA 6%
  """
  A_2

  """
  NO APLICA
  """
  A_0
}

"""
An enumeration.
"""
enum UsersSubsidiaryPdfFormatForQuotationChoices {
  """
  TAMA√ëO A4
  """
  A_1

  """
  TAMA√ëO A5 (MITAD DE A4)
  """
  A_2

  """
  TAMA√ëO TICKETERA
  """
  A_3
}

"""
An enumeration.
"""
enum UsersSubsidiaryPdfFormatForExitNotesChoices {
  """
  TAMA√ëO A4
  """
  A_1

  """
  TAMA√ëO A5 (MITAD DE A4)
  """
  A_2

  """
  TAMA√ëO TICKETERA
  """
  A_3
}

type SerialAssignedType {
  id: Int

  subsidiary: SubsidiaryType

  documentType: OperationsSerialAssignedDocumentTypeChoices!

  serial: String

  isGeneratedViaApi: Boolean!

  documentTypeReadable: String
}

"""
An enumeration.
"""
enum OperationsSerialAssignedDocumentTypeChoices {
  """
  FACTURA
  """
  A_01

  """
  BOLETA
  """
  A_03

  """
  NOTA DE CREDITO
  """
  A_07

  """
  NOTA DE DEBITO
  """
  A_08

  """
  GUIA DE REMISION REMITENTE
  """
  A_09

  """
  GU√çA DE REMISI√ìN TRANSPORTISTA
  """
  A_31

  """
  COMPROBANTE DE RETENCI√ìN
  """
  A_20

  """
  COMPROBANTE DE PERCEPCI√ìN
  """
  A_40

  """
  COMPROBANTE DE OPERACIONES
  """
  A_48

  """
  NOTA DE AJUSTE DE OPERACIONES
  """
  A_89

  """
  NOTA DE ENTRADA
  """
  NE

  """
  NOTA DE SALIDA
  """
  NS

  """
  NO APLICA
  """
  NA
}

type ChoiceWithNumericCodeType {
  code: Int

  name: String
}

type SalesWithPaymentSummaryType {
  salesWithPayments: [OperationType]

  totalCash: Float

  totalDebitCard: Float

  totalCreditCard: Float

  totalTransfer: Float

  totalMonue: Float

  totalCheck: Float

  totalCoupon: Float

  totalYape: Float

  totalDue: Float

  totalOther: Float
}

"""
Tipo para el balance de pagos
"""
type BalancePaymentType {
  """
  Total pendiente por pagar
  """
  totalPending: Float

  """
  √öltima actualizaci√≥n
  """
  lastUpdate: String

  """
  Documentos pendientes de pago
  """
  documents: [OperationDocumentType]

  """
  Pagos realizados
  """
  payments: [CashFlowPaymentType]
}

"""
Tipo para documentos pendientes
"""
type OperationDocumentType {
  id: Int

  """
  Fecha del documento
  """
  date: String

  """
  Descripci√≥n del documento
  """
  description: String

  """
  Total del documento
  """
  total: Float

  """
  Estado del documento (PAGAR/PAGADO)
  """
  status: String

  """
  Tipo de documento
  """
  documentType: String

  """
  Serie del documento
  """
  serial: String

  """
  Correlativo del documento
  """
  correlative: Int
}

"""
Tipo para pagos realizados
"""
type CashFlowPaymentType {
  id: Int

  """
  Fecha del pago
  """
  date: String

  """
  Descripci√≥n del pago
  """
  description: String

  """
  Total del pago
  """
  total: Float

  """
  Forma de pago
  """
  wayPay: String
}

type LocationType {
  districtId: String

  districtDescription: String

  provinceDescription: String

  departmentDescription: String
}

type ProvinceType {
  id: String!

  description: String
}

type DepartmentType {
  id: String!

  description: String
}

type ChoiceWithStringCodeType {
  code: String

  name: String
}

type CpeType {
  xml: String

  cdr: String

  description: String
}

type SalesSummaryType {
  sales: [OperationType]

  totalInvoices: Float

  totalSalesTickets: Float

  totalCreditNotes: Float

  totalDebitNotes: Float

  totalNumberOfPages: Int

  totalNumberOfSales: Int
}

type GuidesSummaryType {
  guides: [OperationType]

  totalNumberOfPages: Int

  totalNumberOfSales: Int
}

type QuotesSummaryType {
  quotes: [OperationType]

  totalNumberOfPages: Int

  totalNumberOfSales: Int
}

type RetentionsSummaryType {
  retentions: [OperationType]

  totalNumberOfPages: Int

  totalNumberOfSales: Int
}

type NotesSummaryType {
  notes: [OperationType]

  totalNumberOfPages: Int

  totalNumberOfNotes: Int
}

type MonthlySalesAndPurchasesType {
  currentMonthSales: PaymentReceiptType

  lastMonthSales: PaymentReceiptType

  currentMonthPurchases: PaymentReceiptType

  currentMonthProductsSold: [ProductSoldType]
}

type PaymentReceiptType {
  invoices: PaymentReceiptDetailType

  tickets: PaymentReceiptDetailType

  exitNotes: PaymentReceiptDetailType
}

type PaymentReceiptDetailType {
  quantity: Float

  total: Float
}

type ProductSoldType {
  productId: Int

  productName: String

  quantitySold: Float

  totalSold: Float
}

type ProductDetailType {
  stock: Float

  remainingQuantity: Float

  priceWithIgv1: Float

  priceWithoutIgv1: Float

  productTariffId1: Int

  priceWithIgv3: Float

  priceWithoutIgv3: Float

  productTariffId3: Int

  typeAffectationId: Int

  activeType: String
}

type ProductStockMovementType {
  productId: Int

  productCode: String

  productName: String

  bought: Float

  sold: Float

  stock: Float

  totalBought: Float

  totalSold: Float
}

type PurchasesSummaryType {
  purchases: [OperationType]

  totalInvoices: Float

  totalPurchasesTickets: Float

  totalCreditNotes: Float

  totalDebitNotes: Float

  totalNumberOfPages: Int

  totalNumberOfPurchases: Int
}

type TariffType {
  productId: Int

  productCode: String

  productName: String

  unitId: Int

  unitName: String

  remainingQuantity: Float

  priceWithIgv: Float

  priceWithoutIgv: Float

  productTariffId: Int

  typeAffectationId: Int

  stock: Float
}

type Mutation {
  createAnnouncement(endDate: DateTime!, message: String!, messageType: String!): CreateAnnouncement

  updateAnnouncement(endDate: DateTime, id: ID!, isActive: Boolean, message: String, messageType: String): UpdateAnnouncement

  createCashFlow(cashId: Int!, currency: String, description: String, operationId: Int, status: String, total: Float!, transactionDate: String, transactionType: String, userId: Int!, wayPay: Int!): CreateCashFlowMutation

  deleteCashFlow(cashFlowId: Int!): DeleteCashFlowMutation

  """
  Mutaci√≥n para aprobar pagos pendientes
  """
  approvePayment(approvalNotes: String, approvedBy: Int!, paymentId: ID!): ApprovePaymentMutation

  """
  Mutaci√≥n para rechazar pagos pendientes
  """
  rejectPayment(paymentId: ID!, rejectedBy: Int!, rejectionReason: String!): RejectPaymentMutation

  """
  Mutaci√≥n para actualizar estado de pagos
  """
  updatePaymentStatus(notes: String, paymentId: ID!, status: String!, updatedBy: Int!): UpdatePaymentStatusMutation

  paymentStatus(amount: Float, cardBrand: String, cardLastFour: String, cardType: String, currency: String, eventType: String!, formToken: String, installmentNumber: Int, ipAddress: String, operationId: Int!, requestData: JSONString, responseData: JSONString, status: String!, userAgent: String): PaymentStatusMutation

  createPerson(address: String, code: String, country: String, districtId: String, documentNumber: String, documentType: String, driverLicense: String, economicActivityMain: Int, email: String, isClient: Boolean, isDriver: Boolean, isEnabled: Boolean, isSupplier: Boolean, names: String, phone: String, shortName: String, subsidiaryId: Int): CreatePersonMutation

  updatePerson(address: String, code: String, country: String, districtId: String, documentNumber: String, documentType: String, driverLicense: String, economicActivityMain: Int, email: String, id: ID!, isClient: Boolean, isDriver: Boolean, isEnabled: Boolean, isSupplier: Boolean, names: String, phone: String, shortName: String): UpdatePersonMutation

  createInvoice(cliente: ClienteType, empresa: EmpresaType, items: [ItemType], sucursal: SucursalType, venta: VentaType): CreateInvoiceMutation

  cancelInvoice(lowDate: Date, operationId: Int): CancelInvoiceMutation

  createOperation(client: PersonInput!, correlative: Int = 0, currencyType: String!, discountForItem: Float = 0, discountGlobal: Float = 0, discountPercentageGlobal: Float = 0, documentType: String!, emitDate: String!, emitTime: String!, id: Int = 0, operationAction: String!, operationDate: String!, operationDetailSet: [OperationDetailInput]!, operationStatus: String!, operationType: String!, parentOperation: Int = 0, payments: [PaymentInput], serial: String, subsidiaryId: Int!, totalAmount: Float = 0, totalDiscount: Float = 0, totalExonerated: Float = 0, totalFree: Float = 0, totalIgv: Float = 0, totalPayed: Float = 0, totalTaxed: Float = 0, totalToPay: Float = 0, totalUnaffected: Float = 0, userId: Int!): CreateOperationMutation

  sntPerson(document: String): SntMutation

  createSale(clientId: Int = 0, commentSet: [String!], correlative: Int = 0, creditNoteType: String = "NA", currencyType: String = "PEN", descriptionSet: [String!], detractionPaymentMethod: Int = 0, detractionPercentage: Float = 0, detractionType: Int = 0, discountForItem: Float = 0, discountGlobal: Float = 0, discountPercentageGlobal: Float = 0, discountPercentageSet: [Float!], documentType: String = "NA", dueDate: Date = null, emitDate: Date = null, guideArrivalAddress: String = "", guideArrivalDistrictId: String = "040101", guideArrivalSerial: String = "", guideModeTransfer: String = "NA", guideOriginAddress: String = "", guideOriginDistrictId: String = "040101", guideOriginSerial: String = "", guideReasonTransfer: String = "NA", hasDetraction: Boolean = false, hasPerception: Boolean = false, hasRetention: Boolean = false, igvPercentageSet: [Float!], igvType: Int = 0, isAnticipationSet: [Boolean!], mainDriverDocumentNumber: String = "", mainDriverDocumentType: String = "1", mainDriverDriverLicense: String = "", mainDriverNames: String = "", mainVehicleLicensePlate: String = "", observation: String = "", operationType: String = "NA", othersDriversDocumentNumberSet: [String!], othersDriversDocumentTypeSet: [String!], othersDriversDriverLicenseSet: [String!], othersDriversNamesSet: [String!], othersVehiclesLicensePlateSet: [String!], parentOperationId: Int = 0, perceptionPercentage: Float = 0, perceptionPercentageSet: [Float!], perceptionType: Int = 0, productIdSet: [Int!], productTariffIdSet: [Int!], quantityPackages: Float = 0, quantitySet: [Float!], receiverDocumentNumber: String = "", receiverDocumentType: String = "1", receiverNames: String = "", relatedDocumentCorrelativeSet: [Int!], relatedDocumentSerialSet: [String!], relatedDocumentsCorrelativeSet: [Int!], relatedDocumentsDocumentTypeSet: [String!], relatedDocumentsSerialSet: [String!], retentionPercentage: Float = 0, retentionType: Int = 0, saleExchangeRate: Float = 0, serial: String = "", totalAmount: Float = 0, totalAmountSet: [Float!], totalAnticipation: Float = 0, totalDetraction: Float = 0, totalDiscount: Float = 0, totalDiscountSet: [Float!], totalExonerated: Float = 0, totalFree: Float = 0, totalIgv: Float = 0, totalIgvSet: [Float!], totalPayed: Float = 0, totalPerception: Float = 0, totalPerceptionSet: [Float!], totalRetention: Float = 0, totalSet: [Float!], totalTaxed: Float = 0, totalToPay: Float = 0, totalToPaySet: [Float!], totalTurned: Float = 0, totalUnaffected: Float = 0, totalValueSet: [Float!], totalWeight: Float = 0, transactionDateSet: [Date!], transferDate: Date = null, transportationCompanyDocumentNumber: String = "", transportationCompanyDocumentType: String = "6", transportationCompanyMtcRegistrationNumber: String = "", transportationCompanyNames: String = "", typeAffectationIdSet: [Int!], unitPriceSet: [Float!], unitValueSet: [Float!], wayPaySet: [Int!], weightMeasurementUnitCode: String = "KGM"): CreateSaleMutation

  createRetentionConstance(correlative: Int, emitDate: Date, observation: String, relatedDocuments: [RelatedDocumentInput], retentionType: Int, serial: String, supplierId: Int): CreateRetentionConstanceMutation

  sendCpeByWhatsapp(id: Int): SendCpeByWhatsapp

  createSerialAssigned(documentType: String, serial: String, subsidiaryId: Int): CreateSerialAssignedMutation

  updateSerialAssigned(documentType: String, id: Int, serial: String, subsidiaryId: Int): UpdateSerialAssignedMutation

  deleteSerialAssigned(id: Int): DeleteSerialAssignedMutation

  updateQuote(clientId: Int = 0, commentSet: [String], correlative: Int = 0, currencyType: String = "PEN", descriptionSet: [String], discountForItem: Float = 0, discountGlobal: Float = 0, discountPercentageGlobal: Float = 0, discountPercentageSet: [Float], documentType: String = "NA", dueDate: Date = null, emitDate: Date = null, igvPercentageSet: [Float], igvType: Int = 0, observation: String = "", operationType: String = "NA", perceptionPercentageSet: [Float], productTariffIdSet: [Int], quantitySet: [Float], quoteId: ID, saleExchangeRate: Float = 0, serial: String = "", totalAmount: Float = 0, totalAmountSet: [Float], totalDiscount: Float = 0, totalDiscountSet: [Float], totalExonerated: Float = 0, totalFree: Float = 0, totalIgv: Float = 0, totalIgvSet: [Float], totalPayed: Float = 0, totalPerception: Float = 0, totalPerceptionSet: [Float], totalSet: [Float], totalTaxed: Float = 0, totalToPay: Float = 0, totalToPaySet: [Float], totalTurned: Float = 0, totalUnaffected: Float = 0, totalValueSet: [Float], typeAffectationIdSet: [Int], unitPriceSet: [Float], unitValueSet: [Float], wayPaySet: [Int]): UpdateQuoteMutation

  registerSale(cliente: ClienteType, creditPay: [CreditPay], items: [ItemType], venta: VentaType): RegisterSaleMutation

  annulInvoice(correlative: Int, serial: String): AnnulInvoiceMutation

  registerGuide(carrier: CarrierType, client: ClienteType, guide: GuideType, items: [ItemType], points: StopPointInputType, relatedDocuments: VentaType, transportation: TransportationType): RegisterGuideMutation

  registerCreditNote(client: ClienteType, creditNote: VentaType, items: [ItemType], relatedDocuments: RelatedDocumentType): RegisterCreditNoteMutation

  createEntryNote(correlative: Int = 0, descriptionSet: [String!], emitDate: Date = null, observation: String = "", operationType: String = "16", productTariffIdSet: [Int!], quantitySet: [Float!], serial: String = "", supplierId: Int = 0, typeAffectationIdSet: [Int!], unitValueSet: [Float!], warehouseId: Int = 0): CreateEntryNoteMutation

  createExitNote(clientId: Int = 0, correlative: Int = 0, descriptionSet: [String!], emitDate: Date = null, observation: String = "", operationType: String = "12", productTariffIdSet: [Int!], quantitySet: [Float!], serial: String = "", typeAffectationIdSet: [Int!], unitValueSet: [Float!], warehouseId: Int = 0): CreateExitNoteMutation

  createWarehouse(category: String, name: String, subsidiaryId: Int): CreateWarehouseMutation

  updateWarehouse(category: String, id: ID!, name: String, subsidiaryId: Int): UpdateWarehouseMutation

  createProduct(activeType: String, available: Boolean, barcode: String, code: String, ean: String, maximumFactor: Int, maximumUnitId: Int, minimumFactor: Int, minimumUnitId: Int, name: String, observation: String, priceWithIgv1: Float, priceWithIgv2: Float, priceWithIgv3: Float, priceWithIgv4: Float, priceWithoutIgv1: Float, priceWithoutIgv2: Float, priceWithoutIgv3: Float, priceWithoutIgv4: Float, stock: Float, subjectPerception: Boolean, typeAffectationId: Int, weightInKilograms: Float): CreateProductMutation

  deleteProduct(id: ID!): DeleteProductMutation

  updateProduct(activeType: String, available: Boolean, barcode: String, code: String, ean: String, id: ID!, maximumFactor: Int, maximumUnitId: Int, minimumFactor: Int, minimumUnitId: Int, name: String, observation: String, priceWithIgv1: Float, priceWithIgv2: Float, priceWithIgv3: Float, priceWithIgv4: Float, priceWithoutIgv1: Float, priceWithoutIgv2: Float, priceWithoutIgv3: Float, priceWithoutIgv4: Float, stock: Float, subjectPerception: Boolean, typeAffectationId: Int, weightInKilograms: Float): UpdateProductMutation

  createUnit(code: String, description: String, shortName: String): CreateUnitMutation

  updateUnit(code: String, description: String, id: ID!, shortName: String): UpdateUnitMutation

  createPurchase(commentSet: [String!], correlative: Int, currencyType: String, descriptionSet: [String!], detractionPaymentMethod: Int = 0, detractionPercentage: Float = 0, detractionType: Int = 0, discountForItem: Float, discountGlobal: Float, discountPercentageGlobal: Float, discountPercentageSet: [Float!], documentType: String, dueDate: String, emitDate: String, hasDetraction: Boolean = false, hasPerception: Boolean = false, hasRetention: Boolean = false, igvPercentageSet: [Float!], igvType: Int, observation: String, operationType: String, perceptionPercentage: Float = 0, perceptionPercentageSet: [Float!], perceptionType: Int = 0, productTariffIdSet: [Int!], quantitySet: [Float!], retentionPercentage: Float = 0, retentionType: Int = 0, saleExchangeRate: Float, serial: String, supplierId: Int, totalAmount: Float, totalAmountSet: [Float!], totalDetraction: Float = 0, totalDiscount: Float, totalDiscountSet: [Float!], totalExonerated: Float, totalFree: Float, totalIgv: Float, totalIgvSet: [Float!], totalPayed: Float, totalPerception: Float, totalPerceptionSet: [Float!], totalRetention: Float = 0, totalSet: [Float!], totalTaxed: Float, totalToPay: Float, totalToPaySet: [Float!], totalTurned: Float, totalUnaffected: Float, totalValueSet: [Float!], transactionDateSet: [Date!], typeAffectationIdSet: [Int!], unitPriceSet: [Float!], unitValueSet: [Float!], wayPaySet: [Int!]): CreatePurchaseMutation

  updatePrice(id: ID!, priceWithIgv: Float, priceWithoutIgv: Float): UpdatePriceMutation

  createProductMovil(input: CreateProductInput!): CreateProductMovilMutation

  updateProductMovil(input: UpdateProductInput!): UpdateProductMovilMutation

  tokenAuth(email: String!, password: String!): ObtainJSONWebToken

  verifyToken(token: String): Verify

  refreshToken(refreshToken: String): Refresh

  revokeToken(refreshToken: String): Revoke

  customRefreshToken(refreshToken: String!): CustomRefreshToken

  logout(userId: Int): LogoutMutation

  loginUser(email: String!, password: String!): LoginUser

  qrScan(description: String!, token: String!, username: String): QrScan

  createUser(avatar: String, avatarUrl: String, document: String, email: String, firstName: String, isActive: Boolean, lastName: String, password: String, phone: String, repeatPassword: String, role: String, subsidiaryId: Int): CreateUserMutation

  updateUser(avatar: String, avatarUrl: String, document: String, email: String, firstName: String, id: ID!, isActive: Boolean, lastName: String, password: String, phone: String, repeatPassword: String, role: String, subsidiaryId: Int): UpdateUserMutation

  accountCompany(document: String, email: String, firstName: String, lastName: String, password: String, phone: String, ruc: String): AccountCompanyMutation

  createCompany(accountNumber: String, address: String!, app: Boolean = false, businessName: String!, catalog: Boolean = false, certification: String, certificationExpirationDate: String, certificationKey: String, comment: String, deductionAccount: String, disableContinuePay: Boolean = false, doc: String!, email: String!, emissionInvoiceWithPreviousDate: Int = 0, emissionReceiptWithPreviousDate: Int = 0, guide: Boolean = false, guideClientId: String, guideClientSecret: String, includeIgv: Boolean = false, invoiceB: Boolean = false, invoiceF: Boolean = false, isAgentPerception: Boolean, isAgentRetention: Boolean, isEnabled: Boolean = false, isProduction: Boolean = false, isRus: Boolean, keySol: String, limit: Int = 500, logo: String, ose: Boolean = false, percentageIgv: Int = 18, phone: String, registerDate: String, shortName: String!, showUser: Boolean, typeDoc: String!, userSol: String, withStock: Boolean = false): CompanyMutationResult

  updateCompany(accountNumber: String, address: String, app: Boolean, businessName: String, catalog: Boolean, certification: String, certificationExpirationDate: String, certificationKey: String, comment: String, deductionAccount: String, disableContinuePay: Boolean, doc: String, email: String, emissionInvoiceWithPreviousDate: Int, emissionReceiptWithPreviousDate: Int, guide: Boolean, guideClientId: String, guideClientSecret: String, id: ID!, includeIgv: Boolean, invoiceB: Boolean, invoiceF: Boolean, isAgentPerception: Boolean, isAgentRetention: Boolean, isEnabled: Boolean, isProduction: Boolean, isRus: Boolean, keySol: String, limit: Int, logo: String, ose: Boolean, percentageIgv: Int, phone: String, registerDate: String, shortName: String, showUser: Boolean, typeDoc: String, userSol: String, withStock: Boolean): CompanyMutationResult

  createSubsidiary(address: String, companyId: Int, districtId: String, fillColor: String, name: String, pdfFormatForGuides: Int, pdfFormatForInvoices: Int, pdfFormatForReceiptInvoices: Int, phone: String, serial: String): CreateSubsidiaryMutation

  updateSubsidiary(address: String, companyId: Int, districtId: String, fillColor: String, id: ID!, name: String, pdfFormatForExitNotes: Int, pdfFormatForGuides: Int, pdfFormatForInvoices: Int, pdfFormatForReceiptInvoices: Int, phone: String, serial: String): UpdateSubsidiaryMutation

  deleteDevice(id: ID!): CancelDeviceMutation
}

type CreateAnnouncement {
  announcement: AnnouncementType
}

type UpdateAnnouncement {
  announcement: AnnouncementType
}

type CreateCashFlowMutation {
  success: Boolean

  message: String

  cashFlow: CashFlowType
}

type DeleteCashFlowMutation {
  success: Boolean

  message: String
}

"""
Mutaci√≥n para aprobar pagos pendientes
"""
type ApprovePaymentMutation {
  success: Boolean

  message: String

  payment: CashFlowType
}

"""
Mutaci√≥n para rechazar pagos pendientes
"""
type RejectPaymentMutation {
  success: Boolean

  message: String

  payment: CashFlowType
}

"""
Mutaci√≥n para actualizar estado de pagos
"""
type UpdatePaymentStatusMutation {
  success: Boolean

  message: String

  payment: CashFlowType
}

type PaymentStatusMutation {
  cashFlow: CashFlowType

  paymentLog: PaymentLogType

  success: Boolean
}

type CreatePersonMutation {
  message: String

  success: Boolean

  personAlreadyRegistered: Boolean

  person: PersonType
}

type UpdatePersonMutation {
  message: String

  success: Boolean

  person: PersonType
}

type CreateInvoiceMutation {
  message: String

  success: Boolean

  operationId: Int
}

input ClienteType {
  razonSocialNombres: String

  numeroDocumento: String

  codigoTipoEntidad: Int

  clienteDireccion: String

  clienteTelefono: String = ""
}

input EmpresaType {
  ruc: String

  razonSocial: String

  nombreComercial: String

  domicilioFiscal: String

  modo: Int

  usuSecundarioProduccionUser: String

  usuSecundarioProduccionPassword: String

  porcentajeIgv: Int
}

input ItemType {
  producto: String

  cantidad: Float

  precioBase: Float

  codigoSunat: String

  codigoProducto: String

  codigoUnidad: String

  tipoIgvCodigo: String

  description: String
}

input SucursalType {
  ubigeo: String

  serie: String

  nombre: String = ""

  direccion: String = ""

  telefono: String = ""
}

input VentaType {
  serie: String

  numero: String

  fechaEmision: String

  horaEmision: String

  fechaVencimiento: String

  monedaId: Int

  formaPagoId: Int

  motiveCreditNote: String = "NA"

  totalGravada: Float

  totalDescuentoGlobalPorcentaje: Float

  totalDescuentoGlobal: Float

  totalIgv: Float

  totalExonerada: Float

  totalInafecta: Float

  totalImporte: Float

  totalAPagar: Float

  tipoDocumentoCodigo: String

  nota: String
}

type CancelInvoiceMutation {
  message: String

  success: Boolean
}

type CreateOperationMutation {
  operation: OperationType

  success: Boolean

  message: String
}

input PersonInput {
  id: Int

  documentType: String

  documentNumber: String

  names: String

  address: String

  email: String

  phone: String
}

input OperationDetailInput {
  id: Int

  tariff: TariffInput

  typeAffectationId: Int

  description: String

  quantity: Float

  unitValue: Float

  unitPrice: Float

  discountPercentage: Float

  totalDiscount: Float

  perceptionPercentage: Float

  totalPerception: Float

  igvPercentage: Float

  totalValue: Float

  totalIgv: Float

  totalAmount: Float

  totalToPay: Float
}

input TariffInput {
  productId: Int

  productCode: String

  productName: String

  unitId: Int

  unitName: String

  remainingQuantity: Float

  priceWithIgv: Float

  priceWithoutIgv: Float

  productTariffId: Int

  typeAffectationId: Int

  stock: Float
}

input PaymentInput {
  wayPay: Int!

  amount: Float!

  note: String

  paymentDate: String!
}

type SntMutation {
  message: String

  success: Boolean

  status: Boolean

  person: PersonSunatType
}

type PersonSunatType {
  sntDocument: String

  sntNames: String

  sntAddress: String

  sntDepartment: String

  sntProvince: String

  sntDistrict: String

  sntDriverLicense: String

  sntId: Int

  sntShortName: String

  sntPhone: String

  sntEmail: String

  sntDocumentType: String

  sntDocumentNumber: String

  sntIsEnabled: Boolean

  sntIsSupplier: Boolean

  sntIsClient: Boolean
}

type CreateSaleMutation {
  message: String

  error: Boolean
}

type CreateRetentionConstanceMutation {
  message: String

  error: Boolean
}

input RelatedDocumentInput {
  documentType: String

  serial: String

  correlative: Int

  emitDate: Date

  currencyDateChange: Date

  currencyType: String

  saleExchangeRate: Decimal

  totalAmount: Decimal

  retentionType: Int

  totalRetention: Decimal

  retentionDate: Date

  quotas: [QuotaInput]
}

input QuotaInput {
  paymentDate: Date

  number: Int

  total: Decimal
}

type SendCpeByWhatsapp {
  message: String

  error: Boolean
}

type CreateSerialAssignedMutation {
  message: String

  error: Boolean
}

type UpdateSerialAssignedMutation {
  message: String

  error: Boolean
}

type DeleteSerialAssignedMutation {
  message: String

  error: Boolean
}

type UpdateQuoteMutation {
  message: String

  error: Boolean
}

type RegisterSaleMutation {
  message: String

  success: Boolean

  operationId: Int
}

input CreditPay {
  transactionDate: String

  amount: Float

  quota: String

  description: String
}

type AnnulInvoiceMutation {
  message: String

  success: Boolean
}

type RegisterGuideMutation {
  message: String

  error: Boolean

  operationId: Int
}

input CarrierType {
  transportationCompanyDocumentType: String

  transportationCompanyDocumentNumber: String

  transportationCompanyNames: String

  transportationCompanyMtcRegistrationNumber: String = ""

  mainVehicleLicensePlate: String

  mainDriverDocumentNumber: String

  mainDriverNames: String

  mainDriverLicense: String
}

input GuideType {
  serial: String

  number: String

  emitDate: String

  emitHour: String

  expirationDate: String

  moneyId: Int

  wayToPayId: Int

  guideModeTransfer: String

  guideReasonTransfer: String

  note: String
}

input StopPointInputType {
  guideOriginDistrictId: String

  guideOriginAddress: String

  guideOriginSerial: String

  guideArrivalDistrictId: String

  guideArrivalAddress: String

  guideArrivalSerial: String
}

input TransportationType {
  transferDate: Date

  totalWeight: Decimal

  quantityPackages: Decimal

  weightMeasurementUnit: String

  reasonTransfer: String

  modeTransfer: String
}

type RegisterCreditNoteMutation {
  message: String

  error: Boolean

  operationId: Int
}

input RelatedDocumentType {
  serial: String

  number: String

  codeTypeDocument: String
}

type CreateEntryNoteMutation {
  message: String

  error: Boolean

  operationId: Int
}

type CreateExitNoteMutation {
  message: String

  error: Boolean

  operationId: Int
}

type CreateWarehouseMutation {
  message: String
}

type UpdateWarehouseMutation {
  message: String
}

type CreateProductMutation {
  message: String

  product: ProductType
}

type DeleteProductMutation {
  message: String
}

type UpdateProductMutation {
  message: String

  product: ProductType
}

type CreateUnitMutation {
  message: String
}

type UpdateUnitMutation {
  message: String
}

type CreatePurchaseMutation {
  message: String

  error: Boolean
}

type UpdatePriceMutation {
  message: String

  error: Boolean
}

type CreateProductMovilMutation {
  success: Boolean

  message: String

  product: ProductType
}

input CreateProductInput {
  name: String!

  code: String

  barcode: String

  observation: String

  stockMin: Int

  stockMax: Int

  minimumUnitId: Int

  maximumUnitId: Int

  typeAffectationId: Int

  subjectPerception: Boolean

  subsidiaryId: Int!

  productTariffs: [ProductTariffInput]
}

input ProductTariffInput {
  unitId: Int

  typePrice: Int!

  priceWithIgv: Decimal!

  priceWithoutIgv: Decimal!

  quantityMinimum: Decimal!
}

type UpdateProductMovilMutation {
  success: Boolean

  message: String
}

input UpdateProductInput {
  productId: Int!

  name: String!

  code: String

  barcode: String

  observation: String

  stockMin: Int

  stockMax: Int

  minimumUnitId: Int

  maximumUnitId: Int

  typeAffectationId: Int

  subjectPerception: Boolean

  productTariffs: [ProductTariffInput]
}

type ObtainJSONWebToken {
  payload: GenericScalar!

  refreshExpiresIn: Int!

  user: UserType

  token: String!

  refreshToken: String!
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

type Verify {
  payload: GenericScalar!
}

type Refresh {
  payload: GenericScalar!

  refreshExpiresIn: Int!

  token: String!

  refreshToken: String!
}

type Revoke {
  revoked: Int!
}

type CustomRefreshToken {
  token: String

  refreshToken: String

  refreshExpiresIn: Float

  success: Boolean

  message: String
}

type LogoutMutation {
  success: Boolean
}

type LoginUser {
  success: String

  error: String

  user: UserType

  token: String
}

type QrScan {
  success: Boolean

  message: String

  company: CompanyType

  subsidiary: SubsidiaryType

  user: UserType

  jwtToken: String

  refreshToken: String
}

type CreateUserMutation {
  message: String

  success: Boolean
}

type UpdateUserMutation {
  message: String
}

type AccountCompanyMutation {
  message: String

  success: Boolean
}

type CompanyMutationResult {
  success: Boolean!

  message: String

  errors: [String]

  company: CompanyType
}

type CreateSubsidiaryMutation {
  message: String

  success: Boolean
}

type UpdateSubsidiaryMutation {
  message: String
}

type CancelDeviceMutation {
  message: String

  success: Boolean
}

"""
A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.
"""
type __Schema {
  description: String

  """
  A list of all types supported by this server.
  """
  types: [__Type!]!

  """
  The type that query operations will be rooted at.
  """
  queryType: __Type!

  """
  If this server supports mutation, the type that mutation operations will be rooted at.
  """
  mutationType: __Type

  """
  If this server support subscription, the type that subscription operations will be rooted at.
  """
  subscriptionType: __Type

  """
  A list of all directives supported by this server.
  """
  directives: [__Directive!]!
}

"""
The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.

Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
"""
type __Type {
  kind: __TypeKind!

  name: String

  description: String

  specifiedByURL: String

  fields(includeDeprecated: Boolean = false): [__Field!]

  interfaces: [__Type!]

  possibleTypes: [__Type!]

  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]

  inputFields(includeDeprecated: Boolean = false): [__InputValue!]

  ofType: __Type
}

"""
An enum describing what kind of type a given `__Type` is.
"""
enum __TypeKind {
  """
  Indicates this type is a scalar.
  """
  SCALAR

  """
  Indicates this type is an object. `fields` and `interfaces` are valid fields.
  """
  OBJECT

  """
  Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.
  """
  INTERFACE

  """
  Indicates this type is a union. `possibleTypes` is a valid field.
  """
  UNION

  """
  Indicates this type is an enum. `enumValues` is a valid field.
  """
  ENUM

  """
  Indicates this type is an input object. `inputFields` is a valid field.
  """
  INPUT_OBJECT

  """
  Indicates this type is a list. `ofType` is a valid field.
  """
  LIST

  """
  Indicates this type is a non-null. `ofType` is a valid field.
  """
  NON_NULL
}

"""
Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.
"""
type __Field {
  name: String!

  description: String

  args(includeDeprecated: Boolean = false): [__InputValue!]!

  type: __Type!

  isDeprecated: Boolean!

  deprecationReason: String
}

"""
Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.
"""
type __InputValue {
  name: String!

  description: String

  type: __Type!

  """
  A GraphQL-formatted string representing the default value for this input value.
  """
  defaultValue: String

  isDeprecated: Boolean!

  deprecationReason: String
}

"""
One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.
"""
type __EnumValue {
  name: String!

  description: String

  isDeprecated: Boolean!

  deprecationReason: String
}

"""
A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.
"""
type __Directive {
  name: String!

  description: String

  isRepeatable: Boolean!

  locations: [__DirectiveLocation!]!

  args(includeDeprecated: Boolean = false): [__InputValue!]!
}

"""
A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.
"""
enum __DirectiveLocation {
  """
  Location adjacent to a query operation.
  """
  QUERY

  """
  Location adjacent to a mutation operation.
  """
  MUTATION

  """
  Location adjacent to a subscription operation.
  """
  SUBSCRIPTION

  """
  Location adjacent to a field.
  """
  FIELD

  """
  Location adjacent to a fragment definition.
  """
  FRAGMENT_DEFINITION

  """
  Location adjacent to a fragment spread.
  """
  FRAGMENT_SPREAD

  """
  Location adjacent to an inline fragment.
  """
  INLINE_FRAGMENT

  """
  Location adjacent to a variable definition.
  """
  VARIABLE_DEFINITION

  """
  Location adjacent to a schema definition.
  """
  SCHEMA

  """
  Location adjacent to a scalar definition.
  """
  SCALAR

  """
  Location adjacent to an object type definition.
  """
  OBJECT

  """
  Location adjacent to a field definition.
  """
  FIELD_DEFINITION

  """
  Location adjacent to an argument definition.
  """
  ARGUMENT_DEFINITION

  """
  Location adjacent to an interface definition.
  """
  INTERFACE

  """
  Location adjacent to a union definition.
  """
  UNION

  """
  Location adjacent to an enum definition.
  """
  ENUM

  """
  Location adjacent to an enum value definition.
  """
  ENUM_VALUE

  """
  Location adjacent to an input object type definition.
  """
  INPUT_OBJECT

  """
  Location adjacent to an input object field definition.
  """
  INPUT_FIELD_DEFINITION
}

"""
Directs the executor to include this field or fragment only when the `if` argument is true.
"""
directive @include ("Included when true." if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
Directs the executor to skip this field or fragment when the `if` argument is true.
"""
directive @skip ("Skipped when true." if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
Marks an element of a GraphQL schema as no longer supported.
"""
directive @deprecated ("Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https:\/\/commonmark.org\/)." reason: String = "No longer supported") on FIELD_DEFINITION|ARGUMENT_DEFINITION|INPUT_FIELD_DEFINITION|ENUM_VALUE

"""
Exposes a URL that specifies the behaviour of this scalar.
"""
directive @specifiedBy ("The URL that specifies the behaviour of this scalar." url: String!) on SCALAR

schema {
  query: Query
  mutation: Mutation
}
